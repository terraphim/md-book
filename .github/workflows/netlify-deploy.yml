name: Deploy to Netlify

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_VERSION: '1.70.0'

jobs:
  build-and-deploy:
    name: Build and Deploy to Netlify
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
          
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-netlify-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-netlify-cargo-
            ${{ runner.os }}-stable-cargo-
            ${{ runner.os }}-cargo-
          save-always: true
            
      - name: Run tests
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test --lib --bins
          
      - name: Build MD-Book
        run: |
          cargo build --release
          
      - name: Generate site
        run: |
          # Create input directory with sample content if it doesn't exist
          if [ ! -d "test_input" ]; then
            mkdir -p test_input
            echo "# Welcome to MD-Book" > test_input/index.md
            echo "" >> test_input/index.md
            echo "This is a modern mdbook replacement written in Rust." >> test_input/index.md
            echo "" >> test_input/index.md
            echo "## Features" >> test_input/index.md
            echo "- Fast and efficient" >> test_input/index.md
            echo "- Modern web technologies" >> test_input/index.md
            echo "- Integrated search" >> test_input/index.md
          fi
          
          # Build the site
          cargo run --release -- -i test_input -o dist
          
      - name: Create 404 page
        run: |
          # Create a custom 404 page
          cat > dist/404.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Page Not Found - MD-Book</title>
              <link rel="stylesheet" href="/css/variables.css">
              <link rel="stylesheet" href="/css/general.css">
              <link rel="stylesheet" href="/css/chrome.css">
          </head>
          <body>
              <div id="wrapper" class="page-wrapper">
                  <div class="page">
                      <main>
                          <h1>Page Not Found</h1>
                          <p>The page you're looking for doesn't exist.</p>
                          <p><a href="/">Return to the homepage</a></p>
                      </main>
                  </div>
              </div>
          </body>
          </html>
          EOF
          
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.event.head_commit.message }}"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
        
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            dist/
            target/release/md-book
          retention-days: 7